import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoMigration1748615113391 implements MigrationInterface {
    name = 'AutoMigration1748615113391'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."location_type_enum" AS ENUM('office', 'factory', 'warehouse')`);
        await queryRunner.query(`CREATE TABLE "location" ("googlePlaceId" character varying(255) NOT NULL, "address" text NOT NULL, "latitude" double precision NOT NULL, "longitude" double precision NOT NULL, "createdAt" TIMESTAMP NOT NULL, "updatedAt" TIMESTAMP NOT NULL, "name" character varying(255), "type" "public"."location_type_enum", CONSTRAINT "PK_c2d2363d628bd74a62e13a3daa9" PRIMARY KEY ("googlePlaceId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_f75de36d0d30611d95d6247fd1" ON "location" ("type") `);
        await queryRunner.query(`CREATE TYPE "public"."vendor_status_enum" AS ENUM('active', 'inactive')`);
        await queryRunner.query(`CREATE TABLE "vendor" ("vendorId" character varying NOT NULL, "vendorName" character varying(255) NOT NULL, "contactPersonName" character varying(255) NOT NULL, "contactPhone" character varying(15) NOT NULL, "address" text NOT NULL, "pricingPolicy" text NOT NULL, "status" "public"."vendor_status_enum" NOT NULL DEFAULT 'active', "baseLocationId" character varying(255), CONSTRAINT "REL_01c998edc852de357ddb132744" UNIQUE ("baseLocationId"), CONSTRAINT "PK_1440d0a09f3a270feeff706c01e" PRIMARY KEY ("vendorId"))`);
        await queryRunner.query(`CREATE TABLE "account" ("userId" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_60328bf27019ff5498c4b977421" PRIMARY KEY ("userId"))`);
        await queryRunner.query(`CREATE TABLE "vehicle_maintenance" ("maintenanceId" character varying NOT NULL, "cost" numeric(8,2) NOT NULL, "note" text NOT NULL, "date" TIMESTAMP NOT NULL, "vehicleId" character varying, CONSTRAINT "PK_1443180edcc94972f48e403eab1" PRIMARY KEY ("maintenanceId"))`);
        await queryRunner.query(`CREATE TYPE "public"."vehicle_type_enum" AS ENUM('company_owned', 'long_term_contract', 'outsourced')`);
        await queryRunner.query(`CREATE TYPE "public"."vehicle_status_enum" AS ENUM('available', 'in_use', 'under_maintenance', 'out_of_service', 'reserved')`);
        await queryRunner.query(`CREATE TABLE "vehicle" ("id" character varying NOT NULL, "licensePlate" character varying(255) NOT NULL, "type" "public"."vehicle_type_enum" NOT NULL, "vehicleImageUrl" character varying(255) NOT NULL, "capacity" integer NOT NULL, "color" character varying(255) NOT NULL, "status" "public"."vehicle_status_enum" NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "driverId" character varying, CONSTRAINT "REL_cbb46518af7f7bf832253c62e0" UNIQUE ("driverId"), CONSTRAINT "PK_187fa17ba39d367e5604b3d1ec9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "trip_location" ("tripLocationId" character varying NOT NULL, "stopOrder" integer NOT NULL, "currentCapacity" integer NOT NULL, "arrivalTimeEstimated" TIMESTAMP NOT NULL, "arrivalTimeActual" TIMESTAMP NOT NULL, "locationId" character varying(255), "tripId" character varying, CONSTRAINT "REL_0e0f85e15f8dfd750e5ee24640" UNIQUE ("locationId"), CONSTRAINT "PK_1e22afc3c1709b1d1110d19a60f" PRIMARY KEY ("tripLocationId"))`);
        await queryRunner.query(`CREATE TABLE "trip_feedback" ("feedbackId" integer NOT NULL, "rating" numeric(2,1) NOT NULL, "comment" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "tripId" character varying, "userId" character varying, CONSTRAINT "PK_85aa9ab4ad6b128aa7af8245be1" PRIMARY KEY ("feedbackId"))`);
        await queryRunner.query(`CREATE TYPE "public"."booking_request_user_role_in_booking_enum" AS ENUM('requester', 'passenger')`);
        await queryRunner.query(`CREATE TABLE "booking_request_user" ("user_id" character varying NOT NULL, "booking_id" character varying NOT NULL, "role_in_booking" "public"."booking_request_user_role_in_booking_enum" NOT NULL, "userId" character varying, "bookingId" character varying, CONSTRAINT "PK_06140d670a1125aae061f2e9d87" PRIMARY KEY ("user_id", "booking_id"))`);
        await queryRunner.query(`CREATE TYPE "public"."booking_request_requestertype_enum" AS ENUM('individual', 'group', 'vip')`);
        await queryRunner.query(`CREATE TYPE "public"."booking_request_status_enum" AS ENUM('draft', 'pending', 'approved', 'assigned', 'cancelled')`);
        await queryRunner.query(`CREATE TABLE "booking_request" ("bookingId" character varying NOT NULL, "requesterType" "public"."booking_request_requestertype_enum" NOT NULL, "departureTime" TIMESTAMP NOT NULL, "arrivalTime" TIMESTAMP NOT NULL, "status" "public"."booking_request_status_enum" NOT NULL DEFAULT 'pending', "numberOfPassengers" integer NOT NULL DEFAULT '0', "note" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "returnDepartureTime" TIMESTAMP, "returnArrivalTime" TIMESTAMP, "durationDays" integer, "type" character varying NOT NULL, "pickUpLocationId" character varying(255), "dropOffLocationId" character varying(255), CONSTRAINT "PK_3269bab2e6487027b46e31e3abf" PRIMARY KEY ("bookingId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_fce66f019d505afddda09a2b46" ON "booking_request" ("type") `);
        await queryRunner.query(`CREATE TYPE "public"."ticket_status_enum" AS ENUM('pending', 'onboard', 'absence')`);
        await queryRunner.query(`CREATE TABLE "ticket" ("userId" character varying NOT NULL, "tripId" character varying NOT NULL, "status" "public"."ticket_status_enum" NOT NULL DEFAULT 'pending', "confirmed_pick_up" boolean NOT NULL DEFAULT false, "confirmed_drop_off" boolean NOT NULL DEFAULT false, "pick_up_location_id" character varying(255), "drop_off_location_id" character varying(255), "booking_id" character varying, CONSTRAINT "PK_344d2d86fca7834826583860b10" PRIMARY KEY ("userId", "tripId"))`);
        await queryRunner.query(`CREATE TYPE "public"."trip_tripstatus_enum" AS ENUM('scheduled', 'in_progress', 'completed', 'canceled')`);
        await queryRunner.query(`CREATE TABLE "trip" ("tripId" character varying NOT NULL, "departureTime" TIMESTAMP NOT NULL, "arrivalTime" TIMESTAMP NOT NULL, "actualDepartureTime" TIMESTAMP NOT NULL, "actualArrivalTime" TIMESTAMP NOT NULL, "tripStatus" "public"."trip_tripstatus_enum" NOT NULL, "totalCost" double precision NOT NULL, "createdAt" TIMESTAMP NOT NULL, "updatedAt" TIMESTAMP NOT NULL, "driverId" character varying, "vendorId" character varying, CONSTRAINT "PK_5f96ba26c177c66805bc1b03654" PRIMARY KEY ("tripId"))`);
        await queryRunner.query(`CREATE TYPE "public"."trip_expense_type_enum" AS ENUM('fuel', 'toll', 'parking', 'meal', 'maintenance', 'other')`);
        await queryRunner.query(`CREATE TABLE "trip_expense" ("tripExpenseId" character varying NOT NULL, "type" "public"."trip_expense_type_enum" NOT NULL, "amount" numeric(10,2) NOT NULL, "description" text NOT NULL, "receiptPhotoUrl" character varying(255) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "tripId" character varying, "driverId" character varying, CONSTRAINT "PK_fc40bc17a81e335788a2053e90a" PRIMARY KEY ("tripExpenseId"))`);
        await queryRunner.query(`CREATE TYPE "public"."executive_status_enum" AS ENUM('active', 'inactive')`);
        await queryRunner.query(`CREATE TABLE "executive" ("userId" character varying NOT NULL, "status" "public"."executive_status_enum" NOT NULL, "driverId" character varying, CONSTRAINT "REL_f9db00f692d277a4fa423e7c5a" UNIQUE ("driverId"), CONSTRAINT "PK_30a9f076778aa26b410e5240c32" PRIMARY KEY ("userId"))`);
        await queryRunner.query(`CREATE TYPE "public"."leave_request_leavetype_enum" AS ENUM('annual', 'sick', 'urgent', 'personal', 'other')`);
        await queryRunner.query(`CREATE TABLE "leave_request" ("leaveId" character varying NOT NULL, "leaveType" "public"."leave_request_leavetype_enum" NOT NULL, "startDate" TIMESTAMP NOT NULL DEFAULT now(), "endDate" TIMESTAMP NOT NULL, "reason" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "driverId" character varying, CONSTRAINT "PK_373999ba796e4ae04a8003e0381" PRIMARY KEY ("leaveId"))`);
        await queryRunner.query(`CREATE TYPE "public"."driver_availabilitystatus_enum" AS ENUM('available', 'on_leave', 'maintenance')`);
        await queryRunner.query(`CREATE TABLE "driver" ("userId" character varying NOT NULL, "availabilityStatus" "public"."driver_availabilitystatus_enum" NOT NULL DEFAULT 'available', "work_hours" double precision NOT NULL DEFAULT '0', "currentLocationId" character varying(255), CONSTRAINT "PK_abf4fe92b1ed7d4ffa2d4e8045a" PRIMARY KEY ("userId"))`);
        await queryRunner.query(`CREATE TABLE "permission" ("permissionId" character varying NOT NULL, "title" character varying(255) NOT NULL, "description" text NOT NULL, CONSTRAINT "PK_86b314be9c1be5c62b3a9d97ae4" PRIMARY KEY ("permissionId"))`);
        await queryRunner.query(`CREATE TABLE "role" ("roleId" character varying NOT NULL, "title" character varying(255) NOT NULL, CONSTRAINT "PK_703705ba862c2bb45250962c9e1" PRIMARY KEY ("roleId"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_status_enum" AS ENUM('active', 'inactive')`);
        await queryRunner.query(`CREATE TABLE "user" ("userId" character varying NOT NULL, "name" character varying(255) NOT NULL, "email" character varying(255) NOT NULL, "password" character varying(255) NOT NULL, "profileImageUrl" character varying(255) NOT NULL, "phoneNumber" character varying(15) NOT NULL, "status" "public"."user_status_enum" NOT NULL DEFAULT 'active', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "UQ_f2578043e491921209f5dadd080" UNIQUE ("phoneNumber"), CONSTRAINT "PK_d72ea127f30e21753c9e229891e" PRIMARY KEY ("userId"))`);
        await queryRunner.query(`CREATE TYPE "public"."log_actiontype_enum" AS ENUM('create', 'update', 'delete', 'assign', 'approve', 'login', 'error', 'logout', 'system')`);
        await queryRunner.query(`CREATE TABLE "log" ("logId" character varying NOT NULL, "actionType" "public"."log_actiontype_enum" NOT NULL, "entityId" character varying(255) NOT NULL, "actionDescription" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" character varying, CONSTRAINT "PK_2a52ff321962f14587f210cd778" PRIMARY KEY ("logId"))`);
        await queryRunner.query(`CREATE TABLE "role_permission" ("role_id" character varying NOT NULL, "permission_id" character varying NOT NULL, CONSTRAINT "PK_19a94c31d4960ded0dcd0397759" PRIMARY KEY ("role_id", "permission_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_3d0a7155eafd75ddba5a701336" ON "role_permission" ("role_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_e3a3ba47b7ca00fd23be4ebd6c" ON "role_permission" ("permission_id") `);
        await queryRunner.query(`CREATE TABLE "user_roles" ("user_id" character varying NOT NULL, "role_id" character varying NOT NULL, CONSTRAINT "PK_23ed6f04fe43066df08379fd034" PRIMARY KEY ("user_id", "role_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_87b8888186ca9769c960e92687" ON "user_roles" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_b23c65e50a758245a33ee35fda" ON "user_roles" ("role_id") `);
        await queryRunner.query(`ALTER TABLE "vendor" ADD CONSTRAINT "FK_01c998edc852de357ddb1327444" FOREIGN KEY ("baseLocationId") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_60328bf27019ff5498c4b977421" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle_maintenance" ADD CONSTRAINT "FK_1bec28c92e2fb7a4bc4ad3e9fee" FOREIGN KEY ("vehicleId") REFERENCES "vehicle"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "vehicle" ADD CONSTRAINT "FK_cbb46518af7f7bf832253c62e08" FOREIGN KEY ("driverId") REFERENCES "driver"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_location" ADD CONSTRAINT "FK_0e0f85e15f8dfd750e5ee24640c" FOREIGN KEY ("locationId") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_location" ADD CONSTRAINT "FK_d291ead906c3e7e252d38b0825d" FOREIGN KEY ("tripId") REFERENCES "trip"("tripId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_feedback" ADD CONSTRAINT "FK_28fd5b8d48c81d1b25ed270ac2a" FOREIGN KEY ("tripId") REFERENCES "trip"("tripId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_feedback" ADD CONSTRAINT "FK_4b0f9109646126f76ce4046872b" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking_request_user" ADD CONSTRAINT "FK_fe2384a5c8cff529a83a17dc3eb" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking_request_user" ADD CONSTRAINT "FK_67ea874e0a5221f27e0d4de2410" FOREIGN KEY ("bookingId") REFERENCES "booking_request"("bookingId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking_request" ADD CONSTRAINT "FK_f420f0e3ff35751103ebce87259" FOREIGN KEY ("pickUpLocationId") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "booking_request" ADD CONSTRAINT "FK_28ecb392f157e000803758b3550" FOREIGN KEY ("dropOffLocationId") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ticket" ADD CONSTRAINT "FK_e3739362ca084e3a9f12ac6cc30" FOREIGN KEY ("pick_up_location_id") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ticket" ADD CONSTRAINT "FK_941dd54586196881b7a59968b75" FOREIGN KEY ("drop_off_location_id") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ticket" ADD CONSTRAINT "FK_0a533de4c59f213152c2313075c" FOREIGN KEY ("booking_id") REFERENCES "booking_request"("bookingId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ticket" ADD CONSTRAINT "FK_4f690fc894557e390882970902a" FOREIGN KEY ("tripId") REFERENCES "trip"("tripId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ticket" ADD CONSTRAINT "FK_0e01a7c92f008418bad6bad5919" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip" ADD CONSTRAINT "FK_2034f2f2e58179b42c4866f6f13" FOREIGN KEY ("driverId") REFERENCES "driver"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip" ADD CONSTRAINT "FK_c2f10579b95219f71861b780157" FOREIGN KEY ("vendorId") REFERENCES "vendor"("vendorId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_expense" ADD CONSTRAINT "FK_ebd8079172960ff088d896653d7" FOREIGN KEY ("tripId") REFERENCES "trip"("tripId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trip_expense" ADD CONSTRAINT "FK_0e7a74a2261de4dd241a0206e2c" FOREIGN KEY ("driverId") REFERENCES "driver"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "executive" ADD CONSTRAINT "FK_30a9f076778aa26b410e5240c32" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "executive" ADD CONSTRAINT "FK_f9db00f692d277a4fa423e7c5a3" FOREIGN KEY ("driverId") REFERENCES "driver"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "leave_request" ADD CONSTRAINT "FK_4ef179d94dd615ccfcbc7fe4c6b" FOREIGN KEY ("driverId") REFERENCES "driver"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "driver" ADD CONSTRAINT "FK_abf4fe92b1ed7d4ffa2d4e8045a" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "driver" ADD CONSTRAINT "FK_20e67c35d005e3a32898228e8ae" FOREIGN KEY ("currentLocationId") REFERENCES "location"("googlePlaceId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "log" ADD CONSTRAINT "FK_cea2ed3a494729d4b21edbd2983" FOREIGN KEY ("userId") REFERENCES "user"("userId") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "role_permission" ADD CONSTRAINT "FK_3d0a7155eafd75ddba5a7013368" FOREIGN KEY ("role_id") REFERENCES "role"("roleId") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_permission" ADD CONSTRAINT "FK_e3a3ba47b7ca00fd23be4ebd6cf" FOREIGN KEY ("permission_id") REFERENCES "permission"("permissionId") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_87b8888186ca9769c960e926870" FOREIGN KEY ("user_id") REFERENCES "user"("userId") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_b23c65e50a758245a33ee35fda1" FOREIGN KEY ("role_id") REFERENCES "role"("roleId") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_b23c65e50a758245a33ee35fda1"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_87b8888186ca9769c960e926870"`);
        await queryRunner.query(`ALTER TABLE "role_permission" DROP CONSTRAINT "FK_e3a3ba47b7ca00fd23be4ebd6cf"`);
        await queryRunner.query(`ALTER TABLE "role_permission" DROP CONSTRAINT "FK_3d0a7155eafd75ddba5a7013368"`);
        await queryRunner.query(`ALTER TABLE "log" DROP CONSTRAINT "FK_cea2ed3a494729d4b21edbd2983"`);
        await queryRunner.query(`ALTER TABLE "driver" DROP CONSTRAINT "FK_20e67c35d005e3a32898228e8ae"`);
        await queryRunner.query(`ALTER TABLE "driver" DROP CONSTRAINT "FK_abf4fe92b1ed7d4ffa2d4e8045a"`);
        await queryRunner.query(`ALTER TABLE "leave_request" DROP CONSTRAINT "FK_4ef179d94dd615ccfcbc7fe4c6b"`);
        await queryRunner.query(`ALTER TABLE "executive" DROP CONSTRAINT "FK_f9db00f692d277a4fa423e7c5a3"`);
        await queryRunner.query(`ALTER TABLE "executive" DROP CONSTRAINT "FK_30a9f076778aa26b410e5240c32"`);
        await queryRunner.query(`ALTER TABLE "trip_expense" DROP CONSTRAINT "FK_0e7a74a2261de4dd241a0206e2c"`);
        await queryRunner.query(`ALTER TABLE "trip_expense" DROP CONSTRAINT "FK_ebd8079172960ff088d896653d7"`);
        await queryRunner.query(`ALTER TABLE "trip" DROP CONSTRAINT "FK_c2f10579b95219f71861b780157"`);
        await queryRunner.query(`ALTER TABLE "trip" DROP CONSTRAINT "FK_2034f2f2e58179b42c4866f6f13"`);
        await queryRunner.query(`ALTER TABLE "ticket" DROP CONSTRAINT "FK_0e01a7c92f008418bad6bad5919"`);
        await queryRunner.query(`ALTER TABLE "ticket" DROP CONSTRAINT "FK_4f690fc894557e390882970902a"`);
        await queryRunner.query(`ALTER TABLE "ticket" DROP CONSTRAINT "FK_0a533de4c59f213152c2313075c"`);
        await queryRunner.query(`ALTER TABLE "ticket" DROP CONSTRAINT "FK_941dd54586196881b7a59968b75"`);
        await queryRunner.query(`ALTER TABLE "ticket" DROP CONSTRAINT "FK_e3739362ca084e3a9f12ac6cc30"`);
        await queryRunner.query(`ALTER TABLE "booking_request" DROP CONSTRAINT "FK_28ecb392f157e000803758b3550"`);
        await queryRunner.query(`ALTER TABLE "booking_request" DROP CONSTRAINT "FK_f420f0e3ff35751103ebce87259"`);
        await queryRunner.query(`ALTER TABLE "booking_request_user" DROP CONSTRAINT "FK_67ea874e0a5221f27e0d4de2410"`);
        await queryRunner.query(`ALTER TABLE "booking_request_user" DROP CONSTRAINT "FK_fe2384a5c8cff529a83a17dc3eb"`);
        await queryRunner.query(`ALTER TABLE "trip_feedback" DROP CONSTRAINT "FK_4b0f9109646126f76ce4046872b"`);
        await queryRunner.query(`ALTER TABLE "trip_feedback" DROP CONSTRAINT "FK_28fd5b8d48c81d1b25ed270ac2a"`);
        await queryRunner.query(`ALTER TABLE "trip_location" DROP CONSTRAINT "FK_d291ead906c3e7e252d38b0825d"`);
        await queryRunner.query(`ALTER TABLE "trip_location" DROP CONSTRAINT "FK_0e0f85e15f8dfd750e5ee24640c"`);
        await queryRunner.query(`ALTER TABLE "vehicle" DROP CONSTRAINT "FK_cbb46518af7f7bf832253c62e08"`);
        await queryRunner.query(`ALTER TABLE "vehicle_maintenance" DROP CONSTRAINT "FK_1bec28c92e2fb7a4bc4ad3e9fee"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_60328bf27019ff5498c4b977421"`);
        await queryRunner.query(`ALTER TABLE "vendor" DROP CONSTRAINT "FK_01c998edc852de357ddb1327444"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b23c65e50a758245a33ee35fda"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_87b8888186ca9769c960e92687"`);
        await queryRunner.query(`DROP TABLE "user_roles"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e3a3ba47b7ca00fd23be4ebd6c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3d0a7155eafd75ddba5a701336"`);
        await queryRunner.query(`DROP TABLE "role_permission"`);
        await queryRunner.query(`DROP TABLE "log"`);
        await queryRunner.query(`DROP TYPE "public"."log_actiontype_enum"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TYPE "public"."user_status_enum"`);
        await queryRunner.query(`DROP TABLE "role"`);
        await queryRunner.query(`DROP TABLE "permission"`);
        await queryRunner.query(`DROP TABLE "driver"`);
        await queryRunner.query(`DROP TYPE "public"."driver_availabilitystatus_enum"`);
        await queryRunner.query(`DROP TABLE "leave_request"`);
        await queryRunner.query(`DROP TYPE "public"."leave_request_leavetype_enum"`);
        await queryRunner.query(`DROP TABLE "executive"`);
        await queryRunner.query(`DROP TYPE "public"."executive_status_enum"`);
        await queryRunner.query(`DROP TABLE "trip_expense"`);
        await queryRunner.query(`DROP TYPE "public"."trip_expense_type_enum"`);
        await queryRunner.query(`DROP TABLE "trip"`);
        await queryRunner.query(`DROP TYPE "public"."trip_tripstatus_enum"`);
        await queryRunner.query(`DROP TABLE "ticket"`);
        await queryRunner.query(`DROP TYPE "public"."ticket_status_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fce66f019d505afddda09a2b46"`);
        await queryRunner.query(`DROP TABLE "booking_request"`);
        await queryRunner.query(`DROP TYPE "public"."booking_request_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."booking_request_requestertype_enum"`);
        await queryRunner.query(`DROP TABLE "booking_request_user"`);
        await queryRunner.query(`DROP TYPE "public"."booking_request_user_role_in_booking_enum"`);
        await queryRunner.query(`DROP TABLE "trip_feedback"`);
        await queryRunner.query(`DROP TABLE "trip_location"`);
        await queryRunner.query(`DROP TABLE "vehicle"`);
        await queryRunner.query(`DROP TYPE "public"."vehicle_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."vehicle_type_enum"`);
        await queryRunner.query(`DROP TABLE "vehicle_maintenance"`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TABLE "vendor"`);
        await queryRunner.query(`DROP TYPE "public"."vendor_status_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f75de36d0d30611d95d6247fd1"`);
        await queryRunner.query(`DROP TABLE "location"`);
        await queryRunner.query(`DROP TYPE "public"."location_type_enum"`);
    }

}
